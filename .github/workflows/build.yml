name: Build Docker image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch: # Allow manual run
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: masterzydra/bio-manager

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set tag
      - name: Set tag
        if: ${{ github.ref_type == 'tag' }}
        run: echo "TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> "$GITHUB_ENV"
      - name: Set tag
        if: ${{ github.ref_type != 'tag' }}
        run: echo "TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> "$GITHUB_ENV"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      # Remove untagged images to keep container registry clean
      - name: Prune untagged images
        uses: vlaurin/action-ghcr-prune@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          user: masterzydra
          container: bio-manager
          prune-untagged: true
          prune-tags-regexes: ^sha256

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - name: Run Container (latest)
      run: |
        docker pull ghcr.io/masterzydra/bio-manager:latest
        docker stop bioman || true
        docker rm bioman || true
        docker run -d --name bioman -p 8083:8080 --restart=unless-stopped --env SSL_MODE=off --env DB_HOST=${{ secrets.IP }} --env DB_USERNAME=root --env DB_PASSWORD='${{ secrets.DB_PASSWORD }}' --env APP_URL=http://${{ secrets.IP }}:8083 ghcr.io/masterzydra/bio-manager:latest
        docker image prune -f
    
    - name: Run Container (production) 
      if: ${{ github.ref_type == 'tag' }}
      run: |
        docker pull ghcr.io/masterzydra/bio-manager:${{ github.ref_name }}
        docker stop bioman-prod || true
        docker rm bioman-prod || true
        docker run -d --name bioman-prod -p 8084:8080 --restart=unless-stopped --env SSL_MODE=off --env DB_HOST=${{ secrets.IP }} --env DB_DATABASE=bioman-prod --env DB_USERNAME=root --env DB_PASSWORD='${{ secrets.DB_PASSWORD }}' --env APP_URL=http://${{ secrets.IP }}:8084 ghcr.io/masterzydra/bio-manager:${{ github.ref_name }}
        docker image prune -f
