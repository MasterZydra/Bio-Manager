<?php

namespace Framework\Database;

use Framework\Config\Config;

class Database
{
    private static ?MariaDB $mariaDB = null;

    /** Execute the SQL generated by the given query build */
    public static function executeBuilder(QueryBuilder|WhereQueryBuilder $queryBuilder): ResultInterface|bool
    {
        if ($queryBuilder->isWhereEmpty()) {
            return self::unprepared($queryBuilder->build());
        } else {
            return self::prepared(
                $queryBuilder->build(),
                $queryBuilder->getColTypes(),
                ...$queryBuilder->getValues()
            );
        }
    }

    public static function executeBlueprint(BlueprintInterface $blueprint): ResultInterface|bool
    {
        $result = false;
        foreach ($blueprint->build() as $sql) {
            $result = self::unprepared($sql);
            if ($result === false) {
                return false;
            }
        }
        return $result;
    }

    /** Execute the given unprepared query. You should try to avoid unprepared statements if they contain user input! */
    public static function unprepared(string $query): ResultInterface|bool
    {
        self::getMariaDb();
        self::$mariaDB->connect();
        $result = self::$mariaDB->unprepared($query);
        self::$mariaDB->disconnect();
        return $result;
    }

    /**
     * Execute the given prepared statement
     * 
     * @param string $colTypes i = int, d = float, s = string
    */
    public static function prepared(string $query, string $colTypes, ...$values): ResultInterface|bool
    {
        self::getMariaDb();
        self::$mariaDB->connect();
        $result = self::$mariaDB->prepared($query, $colTypes, ...$values);
        self::$mariaDB->disconnect();
        return $result;
    }

    /** Get the database name */
    public static function database(): string
    {
        return Config::env('DB_DATABASE');
    }

    private static function getMariaDb(): void
    {
        if (self::$mariaDB !== null) {
            return;
        }
        self::$mariaDB = new MariaDB(Config::env('DB_HOST'), intval(Config::env('DB_PORT')), Config::env('DB_DATABASE'), Config::env('DB_USERNAME'), Config::env('DB_PASSWORD'));
    }
}